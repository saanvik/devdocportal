:javascript
  var timer;

  function clearFilterBox(key) {
      var myTree = $("#tree").dynatree("getTree");
      myTree.selectKey(key,false);
  }
  
  function clearFacets() {
      var myTree = $("#tree").dynatree("getTree");
      #{
         app_area.map{ |area | "myTree.selectKey('#{area}',false);"}.join '\n' unless app_area.nil?
      }
  }

  $(function() { 
    var theTable = $('table#deliverables')
    var hiddenRows

    $("#filter").keyup(function() {
      $.uiTableFilter( theTable, this.value );
      hiddenRows = $("table#deliverables tbody tr").filter(":not(:hidden)");
      $("#searchFiltered").text(hiddenRows.length);
    })

    $('#filter-form').submit(function(){
      theTable.find("tbody > tr:visible > td:eq(1)").mousedown();
      return false;
    }).focus(); //Give focus to input field
  });  

  function redirect(URL) {
    window.location = URL;
  }

  $(function(){
        $("#tree").dynatree({
        debugLevel:2,
        checkbox: true,
        persist: false,
        selectMode: 3,
        initAjax: { 
          url: "/facets.json",
        },
        onPostInit: function(isReloading, isError) {
        // 'this' is the current tree
        // isReloading is true, if status was read from existing cookies
        // isError is only used in Ajax mode
        #{
             app_area.map{ |area | "this.selectKey('#{area}');"}.join '\n' unless app_area.nil?
          }
        this.getRoot().visit(function(node){
          node.expand(true);
          });
        },
        // Set up the initial state based on the URL
        onSelect: function(select, node) {
        // Get a list of all selected nodes, and convert to a key array:
        var selFeatureAreaKeys = $.map(node.tree.getSelectedNodes(), function(node){
          if (node.isDescendantOf(node.tree.getNodeByKey("FeatureArea"))) {
            return node.data.key;
            }
          });
        var selTypeKeys = $.map(node.tree.getSelectedNodes(), function(node){
          if (node.isDescendantOf(node.tree.getNodeByKey("Type"))) {
            return node.data.key;
            }
          });
        if (select) {
           $("#clearAll").before('<span class="btn bluetext pas" id="myKey_' + node.data.key + '" onclick="clearFilterBox(\''+ node.data.key + '\');">' + node.data.title + ' <span class="closeFilterBox greyedText pls">X</span></span>');
           if (node.getChildren()) {
             $.map(node.getChildren(),function(node){
               $("#clearAll").before('<span class="btn bluetext pas" id="myKey_' + node.data.key + '" onclick="clearFilterBox(\''+ node.data.key + '\');">' + node.data.title + ' <span class="closeFilterBox greyedText pls">X</span></span>');
           });}
           } else {
        $("#myKey_" + node.data.key).remove();
        if (node.getChildren()) {
          $.map(node.getChildren(),function(node){
           $("#myKey_" + node.data.key).remove();
          });}}
        #{
          %Q^var redirectURL = '#{@baseURL}/search/#{query}/facet?app_area=' + selFeatureAreaKeys.join(" ") + '&type=' + selTypeKeys.join(" ");^
         }
         if(node.tree.isUserEvent() || (! select)) {
            window.clearTimeout('timer');
            timer = window.setTimeout(function(){redirect(redirectURL)},1000);
          }
          },
      onDblClick: function(node, event) {
        node.toggleSelect();
      }});
      });

:javascript
  $(document).ready(function() {
     #{
       if (@search.total > 0)
       then
       '$("#noSearchResultsDiv").remove();'
       else
       '$("#searchResultsDiv").remove();'
       end
     }
  });

%div{:class => "line",
     :id => "searchResultsLine"}
  %div{:class => "unit size1of4",
       :id => "facetDiv"}
    %div{:class=> "box mrl"}
      %div{:class => "inner"}
        %div{:class => "hd mts mbm"}
          %span{:class => "fadedGreyText"}
            = t.facets.title
        %div{:class => "bd",
             :id => "tree"}

  -# This div is for 1 or more search results
  %div{:class => "unit size3of4 last_unit mts",
       :id => "searchResultsDiv"}
    %div
      %p{:class => "h2"}
        Search Results
      %p{:style => "padding-bottom: 10px; padding-top: 5px;"}
        %span{:id => "searchFiltered"}
          = @search.total
        %span
          = t.of
        %span{:id => "searchFiltered"}
          = @search.total
        %span 
          = t.search_results.count
          %span <b>#{query}</b>
      %p
        %span{:class => "h3"}
          Filters:
        %span{:id=>"filterEnum"}
          %a{:id=>"clearAll",
             :class => "mls",
             :onclick => "clearFacets();",
             :href => "javascript:void(0);"}= t.search.filter_clear
      %div{:class => "box themed standardBg"}
        %div{:class => "inner"}
          %div{:class => "hd mas"}
            %form{:id=>"filter-form"}
              %input{:name => "filter",
                     :type=>"text",
                     :id=>"filter",
                     :value => "",
                     :maxlength => "30",
                     :size => "30",
                     :title => t.filter.placeholder,
                     :placeholder => t.filter.placeholder}
          %div{:class => "bd data colSort"}
            %table{:class => "txtL sort_table search_results",
                   :style => "table-layout: fixed;",
                   :id => "deliverables"}
              %col
              %col{:width => "12%"}
              %col{:width => "12%"}
              %col{:width => "12%"}
              %thead
                %tr
                  %th{:scope => "col",
                      :class =>"sortable sorted h6",
                      :title => t.search_results.th_title}
                    = t.search_results.th_title
                  %th{:scope => "col",
                      :class =>"sortable sorted h6",
                      :title => "updated",
                      :style => "min-width: 8em;"}
                    = t.search_results.th_type
                  %th{:scope => "col",
                      :class =>"sortable sorted h6",
                      :title => "updated",
                      :style => "min-width: 100px;"}
                    = t.search_results.th_technology
                  %th{:scope => "col",
                      :class =>"sortable sorted h6",
                      :title => "updated",
                      :style => "min-width: 8em;"}
                    = t.search_results.th_updated
              %tbody{:class => "content"}
                - @search.each_hit_with_result do |hit, post|
                  - if (locale == 'en' or locale == 'en-us')
                    - then @localtime = Time.at(hit.result.updated_at.to_i).strftime("%b. %d, %Y")
                    - else @localtime = l Time.at(hit.result.updated_at.to_i).to_date, :full
                  - if (hit.highlight(:content).nil?)
                    - then @snippet = ""
                    - else @snippet = hit.highlight(:content).format { |word| "<span class=\"highlight\">#{EscapeUtils.escape_html(word)}</span>"}
                  - @doctype = hit.result.doctype
                  - @technology = hit.result.technology
                  - @maintitle = hit.result.maintitle
                  - @homelink = hit.result.homelink
                  %tr
                    %td
                      %div{:class => "search_results_title mrl"}
                        %a{:href => "/#{root}/#{locale}/#{hit.result.topicname}"}
                          = hit.result.title
                      %div{:class => "mrl"}
                        = @snippet
                      %div
                        %a{:href => "/#{root}/#{locale}/#{@homelink}"}
                          (From #{@maintitle})
                    %td= @doctype
                    %td= @technology
                    %td= @localtime

  -# This div is for no search results
  %div{:class => "unit size3of4 last_unit mts",
       :id => "noSearchResultsDiv"}
    %p{:class => "h2"}
      = t.search.noresults_title
    %p{:style => "padding-bottom: 10px; padding-top: 5px;"}
      %span 
        = t.search.noresults
      %span <b>#{query}</b>
    %p
      %span{:class => "h3"}
        Filters:
    %p{:id => "filterEnum"}

    %div{:class => "data colSort"}
      %p{:class=>"h4"}Tips on Searching
      %p
        = t.search.tip_intro
      %p
        = t.search.tip_quotes
      %p
        = t.search.tip_wildcards
      %p
        = t.search.tip_plus_minus
      %p
        = t.search.tip_facets
      %p
        = t.search.tip_filter









